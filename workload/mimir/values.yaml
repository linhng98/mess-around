mimir-distributed:
  global:
    dnsService: rke2-coredns-rke2-coredns
    dnsNamespace: kube-system
    clusterDomain: cluster.local
  mimir:
    config: |
      usage_stats:
        installation_mode: helm

      activity_tracker:
        filepath: /data/metrics-activity.log

      alertmanager:
        data_dir: /data
        enable_api: true
        external_url: /alertmanager
        {{- if .Values.alertmanager.zoneAwareReplication.enabled }}
        sharding_ring:
          zone_awareness_enabled: true
        {{- end }}
        {{- if .Values.alertmanager.fallbackConfig }}
        fallback_config_file: /configs/alertmanager_fallback_config.yaml
        {{- end }}

      alertmanager_storage:
        backend: local
        local:
          path: /alert-rules
      blocks_storage:
        backend: s3
        bucket_store:
          {{- if index .Values "chunks-cache" "enabled" }}
          chunks_cache:
            backend: memcached
            memcached:
              addresses: {{ include "mimir.chunksCacheAddress" . }}
              max_item_size: {{ mul (index .Values "chunks-cache").maxItemMemory 1024 1024 }}
              timeout: 450ms
              max_idle_connections: 150
          {{- end }}
          {{- if index .Values "index-cache" "enabled" }}
          index_cache:
            backend: memcached
            memcached:
              addresses: {{ include "mimir.indexCacheAddress" . }}
              max_item_size: {{ mul (index .Values "index-cache").maxItemMemory 1024 1024 }}
              max_idle_connections: 150
          {{- end }}
          {{- if index .Values "metadata-cache" "enabled" }}
          metadata_cache:
            backend: memcached
            memcached:
              addresses: {{ include "mimir.metadataCacheAddress" . }}
              max_item_size: {{ mul (index .Values "metadata-cache").maxItemMemory 1024 1024 }}
              max_idle_connections: 150
          {{- end }}
          sync_dir: /data/tsdb-sync

        s3:
          bucket_name: mimir-bucket
          endpoint: rook-ceph-rgw-ceph-objectstore.rook-ceph
          access_key_id: <path:homelab/data/aws-credentials/ceph/mimir-bucket#AWS_ACCESS_KEY_ID>
          secret_access_key: <path:homelab/data/aws-credentials/ceph/mimir-bucket#AWS_SECRET_ACCESS_KEY>
          insecure: true
        tsdb:
          dir: /data/tsdb
          head_compaction_interval: 15m
          wal_replay_concurrency: 3

      compactor:
        compaction_interval: 30m
        deletion_delay: 2h
        max_closing_blocks_concurrency: 2
        max_opening_blocks_concurrency: 4
        symbols_flushers_concurrency: 4
        first_level_compaction_wait_period: 25m
        data_dir: "/data"
        sharding_ring:
          wait_stability_min_duration: 1m

      frontend:
        parallelize_shardable_queries: true
        {{- if index .Values "results-cache" "enabled" }}
        results_cache:
          backend: memcached
          memcached:
            timeout: 500ms
            addresses: {{ include "mimir.resultsCacheAddress" . }}
            max_item_size: {{ mul (index .Values "results-cache").maxItemMemory 1024 1024 }}
        cache_results: true
        query_sharding_target_series_per_shard: 2500
        {{- end }}
        {{- if .Values.query_scheduler.enabled }}
        scheduler_address: {{ template "mimir.fullname" . }}-query-scheduler-headless.{{ .Release.Namespace }}.svc:{{ include "mimir.serverGrpcListenPort" . }}
        {{- end }}

      frontend_worker:
        grpc_client_config:
          max_send_msg_size: 419430400 # 400MiB
        {{- if .Values.query_scheduler.enabled }}
        scheduler_address: {{ template "mimir.fullname" . }}-query-scheduler-headless.{{ .Release.Namespace }}.svc:{{ include "mimir.serverGrpcListenPort" . }}
        {{- else }}
        frontend_address: {{ template "mimir.fullname" . }}-query-frontend-headless.{{ .Release.Namespace }}.svc:{{ include "mimir.serverGrpcListenPort" . }}
        {{- end }}

      ingester:
        ring:
          final_sleep: 0s
          num_tokens: 512
          tokens_file_path: /data/tokens
          unregister_on_shutdown: false
          {{- if .Values.ingester.zoneAwareReplication.enabled }}
          zone_awareness_enabled: true
          {{- end }}

      ingester_client:
        grpc_client_config:
          max_recv_msg_size: 104857600
          max_send_msg_size: 104857600

      limits:
        compactor_blocks_retention_period: "604800s"
        max_global_series_per_user: 0
        max_global_series_per_metric: 0
        ingestion_rate: 10000000
        ingestion_burst_size: 20000000
        max_label_names_per_series: 300
        max_label_value_length: 8192
        compactor_partial_block_deletion_delay: 4h
        out_of_order_time_window: 1h

      memberlist:
        abort_if_cluster_join_fails: false
        compression_enabled: false
        join_members:
        - dns+{{ include "mimir.fullname" . }}-gossip-ring.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:{{ include "mimir.memberlistBindPort" . }}

      querier:
        max_concurrent: 16

      query_scheduler:
        max_outstanding_requests_per_tenant: 800

      ruler:
        alertmanager_url: dnssrvnoa+http://_http-metrics._tcp.{{ template "mimir.fullname" . }}-alertmanager-headless.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}/alertmanager
        enable_api: true
        rule_path: /data

      ruler_storage:
        backend: local
        local:
          directory: /data-rules

      runtime_config:
        file: /var/{{ include "mimir.name" . }}/runtime.yaml

      server:
        grpc_server_max_concurrent_streams: 1000
        grpc_server_max_connection_age: 2m
        grpc_server_max_connection_age_grace: 5m
        grpc_server_max_connection_idle: 1m

      store_gateway:
        sharding_ring:
          wait_stability_min_duration: 1m
          {{- if .Values.store_gateway.zoneAwareReplication.enabled }}
          kvstore:
            prefix: multi-zone/
          {{- end }}
          tokens_file_path: /data/tokens
          unregister_on_shutdown: false
          {{- if .Values.store_gateway.zoneAwareReplication.enabled }}
          zone_awareness_enabled: true
          {{- end }}
  alertmanager:
    zoneAwareReplication:
      enabled: false
    enabled: true
    replicas: 2
    statefulSet:
      enabled: true
    resources:
      requests:
        cpu: 10m
        memory: 32Mi
    extraContainers:
      - name: config-reloader
        image: docker.io/kiwigrid/k8s-sidecar:1.30.5
        env:
          - name: LABEL
            value: mimir_alertmanager_configs
          - name: UNIQUE_FILENAMES
            value: "false"
          - name: FOLDER
            value: /alert-rules
          - name: NAMESPACE
            value: mimir
          - name: RESOURCE
            value: configmap
          - name: FOLDER_ANNOTATION
            value: k8s-sidecar-target-directory
        volumeMounts:
          - name: alert-rules
            mountPath: /alert-rules
    extraVolumes:
      - name: alert-rules
        emptyDir: {}
    extraVolumeMounts:
      - name: alert-rules
        mountPath: /alert-rules
  distributor:
    replicas: 3
    resources:
      requests:
        cpu: 10m
        memory: 512Mi
  ingester:
    zoneAwareReplication:
      enabled: false
    replicas: 3
    statefulSet:
      enabled: true
    resources:
      requests:
        cpu: 10m
        memory: 512Mi
    persistentVolume:
      size: 5Gi
  overrides_exporter:
    enabled: true
    replicas: 1
    resources:
      requests:
        cpu: 10m
        memory: 128Mi
  ruler:
    enabled: true
    replicas: 2
    annotations:
      reloader.stakater.com/auto: "true"
    resources:
      requests:
        cpu: 10m
        memory: 128Mi
    extraContainers:
      - name: config-reloader
        image: docker.io/kiwigrid/k8s-sidecar:1.30.5
        env:
          - name: LABEL
            value: mimir_rules
          - name: UNIQUE_FILENAMES
            value: "true"
          - name: FOLDER
            value: /data-rules
          - name: NAMESPACE
            value: mimir
          - name: RESOURCE
            value: configmap
          - name: FOLDER_ANNOTATION
            value: k8s-sidecar-target-directory
          - name: METHOD
            value: SLEEP
          - name: SLEEP_TIME
            value: "60"
        volumeMounts:
          - name: ruler-cm
            mountPath: /data-rules
    extraVolumes:
      - name: ruler-cm
        emptyDir: {}
    extraVolumeMounts:
      - name: ruler-cm
        mountPath: /data-rules
  querier:
    replicas: 2
    resources:
      requests:
        cpu: 10m
        memory: 128Mi
  query_frontend:
    replicas: 1
    resources:
      requests:
        cpu: 10m
        memory: 128Mi
  store_gateway:
    zoneAwareReplication:
      enabled: false
    replicas: 2
    resources:
      requests:
        cpu: 10m
        memory: 50Mi
    persistentVolume:
      size: 5Gi
  compactor:
    replicas: 3
    resources:
      requests:
        cpu: 10m
        memory: 50Mi
    persistentVolume:
      size: 5Gi
  chunks-cache:
    enabled: true
    replicas: 1
  index-cache:
    enabled: true
    replicas: 1
  metadata-cache:
    enabled: true
  results-cache:
    enabled: true
    replicas: 1
  minio:
    enabled: false
  nginx:
    enabled: true
    replicas: 3
  metaMonitoring:
    serviceMonitor:
      enabled: true
