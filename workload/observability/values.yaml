loki-stack:
  loki:
    enabled: true
    isDefault: false
    config:
      auth_enabled: false
      ruler:
        storage:
          type: local
          local:
            directory: &rule_path /loki-rules
        rule_path: *rule_path
        alertmanager_url: http://observability-prom-alertmanager:9093
        ring:
          kvstore:
            store: inmemory
        enable_api: true
      memberlist:
        join_members:
          # the value must be defined as string to be evaluated when secret manifest is being generating
          - '{{ include "loki.fullname" . }}-memberlist'
      ingester:
        chunk_idle_period: 3m
        chunk_block_size: 262144
        chunk_retain_period: 1m
        max_transfer_retries: 0
        wal:
          dir: /data/loki/wal
        lifecycler:
          ring:
            replication_factor: 1
      limits_config:
        enforce_metric_name: false
        reject_old_samples: true
        reject_old_samples_max_age: 168h
        max_entries_limit_per_query: 5000
      schema_config:
        configs:
          - from: 2020-10-24
            store: boltdb-shipper
            object_store: filesystem
            schema: v11
            index:
              prefix: index_
              period: 24h
      server:
        http_listen_port: 3100
        grpc_listen_port: 9095
      storage_config:
        boltdb_shipper:
          active_index_directory: /data/loki/boltdb-shipper-active
          cache_location: /data/loki/boltdb-shipper-cache
          cache_ttl: 24h # Can be increased for faster performance over longer query periods, uses more disk space
          shared_store: filesystem
        filesystem:
          directory: /data/loki/chunks
      chunk_store_config:
        max_look_back_period: 1d
      table_manager:
        retention_deletes_enabled: true
        retention_period: 1d
      compactor:
        working_directory: /data/loki/boltdb-shipper-compactor
        shared_store: filesystem
        retention_enabled: true
    extraContainers:
      - name: config-reloader
        image: docker.io/kiwigrid/k8s-sidecar:1.30.3
        env:
          - name: LABEL
            value: loki_rules
          - name: UNIQUE_FILENAMES
            value: 'true'
          - name: FOLDER
            value: *rule_path
          - name: NAMESPACE
            value: observability
          - name: RESOURCE
            value: configmap
          - name: FOLDER_ANNOTATION
            value: k8s-sidecar-target-directory
          - name: METHOD
            value: SLEEP
          - name: SLEEP_TIME
            value: '60'
        volumeMounts:
          - name: ruler-cm
            mountPath: *rule_path
    extraVolumes:
      - name: ruler-cm
        emptyDir: {}
    extraVolumeMounts:
      - name: ruler-cm
        mountPath: *rule_path
    serviceMonitor:
      enabled: true
  promtail:
    enabled: true
    config:
      logLevel: info
      serverPort: 3101
      clients:
        - url: http://{{ .Release.Name }}-loki:3100/loki/api/v1/push
    serviceMonitor:
      enabled: true
metrics-server:
  metrics:
    enabled: true
  serviceMonitor:
    enabled: true
prom:
  grafana:
    enabled: false
  prometheusOperator:
    prometheusConfigReloader:
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
  prometheus:
    prometheusSpec:
      ruleSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      probeSelectorNilUsesHelmValues: false
      externalLabels:
        cluster: homelab
      retention: 15m # reduce retention to 15m due to https://grafana.com/docs/mimir/latest/operators-guide/mimir-runbooks/#err-mimir-sample-timestamp-too-old
      shards: 3
      #storageSpec:
      #  volumeClaimTemplate:
      #    spec:
      #      accessModes: [ReadWriteOnce]
      #      resources:
      #        requests:
      #          storage: 5Gi
      remoteWrite:
        - url: http://mimir-nginx.mimir/api/v1/push
          headers:
            X-Scope-OrgID: homelab
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - prometheus
              topologyKey: kubernetes.io/hostname
  alertmanager:
    enabled: false
grafana:
  serviceMonitor:
    enabled: true
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-route53-prod
    hosts:
      - &host grafana.homelab.linhng98.com
    tls:
      - secretName: grafana-tls
        hosts:
          - *host
  deploymentStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  admin:
    existingSecret: grafana-admin-dashboard
    userKey: admin-user
    passwordKey: admin-password
  persistence:
    enabled: false
  plugins:
    - vonage-status-panel
    - grafana-piechart-panel
  sidecar:
    enableUniqueFilenames: false
    dashboards:
      enabled: true
      provider:
        # disableDelete to activate a import-only behaviour
        disableDelete: true
        # allow updating provisioned dashboards from the UI
        allowUiUpdates: false
        # allow Grafana to replicate dashboard structure from filesystem
        foldersFromFilesStructure: true
    datasources:
      enabled: true
      defaultDatasourceEnabled: false
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Loki
          type: loki
          uid: loki
          url: http://observability-loki:3100
        - name: Tempo
          type: tempo
          uid: tempo
          url: http://tempo-gateway.tempo
          jsonData:
            serviceMap:
              httpMethod: GET
              datasourceUid: Prometheus
            search:
              hide: false
            nodeGraph:
              enabled: true
        - name: Prometheus
          isDefault: true
          type: prometheus
          uid: prometheus
          url: http://mimir-nginx.mimir/prometheus
          basicAuth: false
          jsonData:
            httpHeaderName1: X-Scope-OrgID
          secureJsonData:
            httpHeaderValue1: homelab
  grafana.ini:
    server:
      root_url: https://grafana.homelab.linhng98.com
    users:
      viewers_can_edit: true
    auth:
      disable_login_form: false
    #auth.google:
    #  enabled: true
    #  client_id: <path:homelab/data/google_oauth2/grafana#client_id>
    #  client_secret: <path:homelab/data/google_oauth2/grafana#client_secret>
    #  scopes: https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email
    #  auth_url: https://accounts.google.com/o/oauth2/auth
    #  token_url: https://accounts.google.com/o/oauth2/token
    #  allow_sign_up: true
    auth.anonymous:
      enabled: true
      org_role: Viewer
      hide_version: true
    feature_toggles:
      enable: tempoApmTable
